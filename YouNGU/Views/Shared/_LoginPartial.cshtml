
@using Microsoft.AspNetCore.Identity
@using YouNGU.Models.Entities
@using YouNGU.Models.ViewModels
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{

    var userNotifications = ViewData["UserNotifications"] as IEnumerable<NotificationViewModel>;
    if (userNotifications == null)
    {
        userNotifications = Enumerable.Empty<NotificationViewModel>(); // Default to an empty list if not found
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Video" asp-action="Upload" title="Tải video lên">
                <i class="bi bi-upload me-1"></i> Tải lên
            </a>
        </li>

        @if (User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Admin" asp-controller="Dashboard" asp-action="Index" title="Khu vực quản trị">
                    <i class="bi bi-shield-lock-fill me-1"></i> Quản trị
                </a>
            </li>
        }

        <li class="nav-item dropdown">
            <a class="nav-link text-dark" href="#" id="notificationDropdownToggle" role="button" data-bs-toggle="dropdown" aria-expanded="false" title="Thông báo">
                <i class="bi bi-bell-fill"></i>
                @* Optional: Display unread count badge *@
                @{
                    int unreadCount = userNotifications.Count(n => !n.IsRead);
                    if (unreadCount > 0)
                    {
                        <span class="badge bg-danger rounded-pill position-absolute top-0 start-75 translate-middle-y ms-1" style="font-size: 0.6em; padding: 0.2em 0.4em;">
                            @(unreadCount > 9 ? "9+" : unreadCount.ToString())
                        </span>
                    }
                }
            </a>
            <div class="dropdown-menu dropdown-menu-end notification-dropdown p-0" aria-labelledby="notificationDropdownToggle" style="min-width: 350px; max-width:400px;">
                <div class="dropdown-header d-flex justify-content-between align-items-center py-2 px-3">
                    <span class="fw-bold">Thông báo</span>
                    @if (userNotifications.Any())
                    {
                        <form asp-controller="Notification" asp-action="MarkAllAsRead" method="post" class="mb-0">
                            @* Add AntiForgeryToken if not using global filter or if needed explicitly *@
                            @* @Html.AntiForgeryToken() *@
                            <button type="submit" class="btn btn-link btn-sm p-0 text-decoration-none">Đánh dấu tất cả đã đọc</button>
                        </form>
                    }
                </div>
                <div class="dropdown-divider my-0"></div>

                <div class="notification-list" style="max-height: 400px; overflow-y: auto;">
                    @if (userNotifications.Any())
                    {
                        foreach (var notification in userNotifications.OrderByDescending(n => n.CreatedAt)) // Display newest first
                        {
                            <a class="dropdown-item py-2 px-3 @(notification.IsRead ? "" : "fw-bold bg-light")" asp-controller="Notification" asp-action="RedirectToLink" asp-route-notificationId="@notification.Id">
                                <div class="d-flex align-items-start">
                                    <div class="notification-icon me-3 fs-5 text-center" style="width: 20px;">
                                        @switch (notification.Type)
                                        {
                                            case NotificationType.Interaction:
                                                <i class="bi bi-hand-thumbs-up text-primary"></i>
                                                break;
                                            case NotificationType.Subscription:
                                                <i class="bi bi-person-plus text-success"></i>
                                                break;
                                            case NotificationType.NewContent:
                                                <i class="bi bi-play-circle text-info"></i>
                                                break;
                                            case NotificationType.System:
                                                <i class="bi bi-gear text-secondary"></i>
                                                break;
                                            case NotificationType.Achievement:
                                                <i class="bi bi-trophy text-warning"></i>
                                                break;
                                            default:
                                                <i class="bi bi-bell text-muted"></i>
                                                break;
                                        }
                                    </div>
                                    <div class="notification-content flex-grow-1">
                                        <div class="notification-title small">@Html.Raw(notification.Title)</div> @* Use Html.Raw if title can contain HTML *@
                                        <div class="notification-message small text-muted">@Html.Raw(notification.Message)</div> @* Use Html.Raw if message can contain HTML *@
                                        <div class="notification-time small text-muted fst-italic">
                                            @* Replace with your actual ToRelativeTimeString() or preferred formatting *@
                                            @if (notification.CreatedAt.Date == DateTime.Today)
                                            {
                                                @notification.CreatedAt.ToString("HH:mm")
                                            }
                                            else if (notification.CreatedAt.Date == DateTime.Today.AddDays(-1))
                                            {
                                                @:Hôm qua @notification.CreatedAt.ToString("HH:mm")
                                            }
                                            else
                                            {
                                                @notification.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                            }
                                        </div>
                                    </div>
                                </div>
                            </a>
                        }
                    }
                    else
                    {
                        <div class="dropdown-item text-center text-muted py-3">
                            Không có thông báo mới
                        </div>
                    }
                </div>

                <div class="dropdown-divider my-0"></div>
                <a class="dropdown-item text-center py-2" asp-controller="Notification" asp-action="Index">
                    Xem tất cả thông báo
                </a>
            </div>
        </li>

        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-dark d-flex align-items-center" href="#" id="userDropdownToggle" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                @if (!string.IsNullOrEmpty(User.FindFirst("AvatarPath")?.Value))
                {
                    <img src="@Url.Content($"~/uploads/avatars/{User.FindFirst("AvatarPath")?.Value}")" alt="@User.Identity?.Name" class="rounded-circle me-2" width="24" height="24" style="object-fit: cover;">
                }
                else
                {
                    <i class="bi bi-person-circle me-2 fs-5"></i>
                }
                @User.Identity?.Name
            </a>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdownToggle">
                <li><a class="dropdown-item" asp-controller="Channel" asp-action="MyVideos"><i class="bi bi-camera-video-fill me-2"></i>Video của tôi</a></li>
                <li><a class="dropdown-item" asp-controller="Playlist" asp-action="Index"><i class="bi bi-collection-play-fill me-2"></i>Playlist của tôi</a></li>
                <li><a class="dropdown-item" asp-controller="Video" asp-action="Manage"><i class="bi bi-gear-fill me-2"></i>Quản lý video</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Quản lý tài khoản"><i class="bi bi-person-gear me-2"></i>Tài khoản</a></li>
                <li><hr class="dropdown-divider"></li>
                <li>
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post">
                        @* Add AntiForgeryToken if not using global filter or if needed explicitly *@
                        @* @Html.AntiForgeryToken() *@
                        <button type="submit" class="dropdown-item"><i class="bi bi-box-arrow-right me-2"></i>Đăng xuất</button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register"><i class="bi bi-person-plus-fill me-1"></i> Đăng ký</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login"><i class="bi bi-box-arrow-in-right me-1"></i> Đăng nhập</a>
        </li>
    }
</ul>


