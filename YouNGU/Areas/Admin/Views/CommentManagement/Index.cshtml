@model IEnumerable<YouNGU.Models.Entities.Comment>
@{
    ViewData["Title"] = "Quản lý bình luận";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Quản lý bình luận</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/Admin/Dashboard">Bảng điều khiển</a></li>
        <li class="breadcrumb-item active">Quản lý bình luận</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <i class="fas fa-comments me-1"></i>
                    Danh sách bình luận
                </div>
                <div class="d-flex">
                    <div class="input-group me-2" style="width: 300px;">
                        <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm bình luận...">
                        <button class="btn btn-outline-secondary" type="button" id="searchButton">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <select id="statusFilter" class="form-select me-2" style="width: 150px;">
                        <option value="">Tất cả trạng thái</option>
                        <option value="approved">Đã duyệt</option>
                        <option value="pending">Chưa duyệt</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="commentsTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Nội dung</th>
                            <th>Video</th>
                            <th>Người dùng</th>
                            <th>Trạng thái</th>
                            <th>Ngày tạo</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var comment in Model)
                        {
                            <tr>
                                <td>
                                    <div class="text-truncate" style="max-width: 300px;">@comment.Content</div>
                                </td>
                                <td>
                                    @if (comment.Video != null)
                                    {
                                        <a href="/Video/Watch/@comment.VideoId" target="_blank" class="text-truncate" style="max-width: 150px;">
                                            @comment.Video.Title
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Video không tồn tại</span>
                                    }
                                </td>
                                <td>
                                    @if (comment.User != null)
                                    {
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(comment.User.AvatarPath))
                                            {
                                                <img src="@Url.Content(comment.User.AvatarPath)" alt="@comment.User.UserName" class="rounded-circle me-2" style="width: 30px; height: 30px; object-fit: cover;">
                                            }
                                            else
                                            {
                                                <div class="rounded-circle bg-secondary text-white d-flex align-items-center justify-content-center me-2" style="width: 30px; height: 30px;">
                                                    @(string.IsNullOrEmpty(comment.User.UserName) ? "?" : comment.User.UserName.Substring(0, 1).ToUpper())
                                                </div>
                                            }
                                            <span>@comment.User.UserName</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Người dùng không tồn tại</span>
                                    }
                                </td>
                                <td class="comment-status">
                                    @if (comment.IsApproved)
                                    {
                                        <span class="badge bg-success">Đã duyệt</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">Chưa duyệt</span>
                                    }
                                </td>
                                <td>@comment.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>
                                    <div class="d-flex">
                                        <a asp-action="Edit" asp-route-id="@comment.Id" class="btn btn-sm btn-primary me-2">
                                            <i class="fas fa-edit"></i> Sửa
                                        </a>
                                        @if (!comment.IsApproved)
                                        {
                                            <button type="button" class="btn btn-sm btn-success me-2" onclick="quickApproveComment(@comment.Id, this)">
                                                <i class="fas fa-check"></i> Duyệt
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-sm btn-warning me-2" onclick="quickRejectComment(@comment.Id, this)">
                                                <i class="fas fa-ban"></i> Từ chối
                                            </button>
                                        }
                                        <button type="button" class="btn btn-sm btn-danger"
                                                data-bs-toggle="modal"
                                                data-bs-target="#deleteModal"
                                                data-comment-id="@comment.Id">
                                            <i class="fas fa-trash"></i> Xóa
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa bình luận này?</p>
                <p class="text-danger">Hành động này không thể hoàn tác.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <form id="deleteForm" asp-action="Delete" method="post">
                    <input type="hidden" id="deleteCommentId" name="id" />
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTable
            var table = $('#commentsTable').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.4/i18n/vi.json'
                },
                responsive: true,
                order: [[4, 'desc']] // Sắp xếp theo ngày tạo giảm dần
            });

            // Search functionality
            $('#searchButton').on('click', function() {
                table.search($('#searchInput').val()).draw();
            });

            $('#searchInput').on('keyup', function(e) {
                if (e.key === 'Enter') {
                    table.search($(this).val()).draw();
                }
            });

            // Status filter
            $('#statusFilter').on('change', function() {
                var status = $(this).val();

                if (status === 'approved') {
                    table.column(3).search('Đã duyệt').draw();
                } else if (status === 'pending') {
                    table.column(3).search('Chưa duyệt').draw();
                } else {
                    table.column(3).search('').draw();
                }
            });

            // Delete modal
            $('#deleteModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var commentId = button.data('comment-id');

                $('#deleteCommentId').val(commentId);
            });
        });

        // Quick approve function
        function quickApproveComment(commentId, button) {
            if (!confirm('Bạn có chắc chắn muốn duyệt bình luận này không?')) {
                return;
            }

            button.disabled = true;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';

            fetch('/Admin/CommentManagement/QuickApprove/' + commentId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update UI
                    const statusCell = button.closest('tr').querySelector('.comment-status');
                    statusCell.innerHTML = '<span class="badge bg-success">Đã duyệt</span>';

                    // Replace approve button with reject button
                    const buttonCell = button.closest('td');
                    const editButton = buttonCell.querySelector('.btn-primary');
                    const deleteButton = buttonCell.querySelector('.btn-danger');

                    buttonCell.innerHTML = '';
                    buttonCell.appendChild(editButton.cloneNode(true));

                    const rejectButton = document.createElement('button');
                    rejectButton.type = 'button';
                    rejectButton.className = 'btn btn-sm btn-warning me-2';
                    rejectButton.innerHTML = '<i class="fas fa-ban"></i> Từ chối';
                    rejectButton.onclick = function() { quickRejectComment(commentId, this); };
                    buttonCell.appendChild(rejectButton);

                    buttonCell.appendChild(deleteButton.cloneNode(true));
                } else {
                    alert('Lỗi: ' + data.message);
                    button.disabled = false;
                    button.innerHTML = '<i class="fas fa-check"></i> Duyệt';
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Đã xảy ra lỗi khi duyệt bình luận');
                button.disabled = false;
                button.innerHTML = '<i class="fas fa-check"></i> Duyệt';
            });
        }

        // Quick reject function
        function quickRejectComment(commentId, button) {
            if (!confirm('Bạn có chắc chắn muốn từ chối bình luận này không?')) {
                return;
            }

            button.disabled = true;
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';

            fetch('/Admin/CommentManagement/QuickReject/' + commentId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update UI
                    const statusCell = button.closest('tr').querySelector('.comment-status');
                    statusCell.innerHTML = '<span class="badge bg-warning">Chưa duyệt</span>';

                    // Replace reject button with approve button
                    const buttonCell = button.closest('td');
                    const editButton = buttonCell.querySelector('.btn-primary');
                    const deleteButton = buttonCell.querySelector('.btn-danger');

                    buttonCell.innerHTML = '';
                    buttonCell.appendChild(editButton.cloneNode(true));

                    const approveButton = document.createElement('button');
                    approveButton.type = 'button';
                    approveButton.className = 'btn btn-sm btn-success me-2';
                    approveButton.innerHTML = '<i class="fas fa-check"></i> Duyệt';
                    approveButton.onclick = function() { quickApproveComment(commentId, this); };
                    buttonCell.appendChild(approveButton);

                    buttonCell.appendChild(deleteButton.cloneNode(true));
                } else {
                    alert('Lỗi: ' + data.message);
                    button.disabled = false;
                    button.innerHTML = '<i class="fas fa-ban"></i> Từ chối';
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Đã xảy ra lỗi khi từ chối bình luận');
                button.disabled = false;
                button.innerHTML = '<i class="fas fa-ban"></i> Từ chối';
            });
        }
    </script>
}
